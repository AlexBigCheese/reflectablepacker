// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'package:ReflectablePackager/src/master.dart' as prefix0;
import 'serializer_test.dart' as prefix1;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_builder_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.RPackReflector(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"Alotta",
            r"rpack.test.serialize.Alotta",
            7,
            0,
            const prefix0.RPackReflector(),
            const <int>[0, 1, 13],
            const <int>[14, 15, 16, 17, 18, 9, 10, 11, 12],
            const <int>[],
            -1,
            {},
            {},
            {
              r"": (b) => (what, howMuch) =>
                  b ? new prefix1.Alotta(what, howMuch) : null
            },
            0,
            0,
            const <int>[],
            const <Object>[prefix0.rpack],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Tree",
            r"rpack.test.serialize.Tree",
            7,
            1,
            const prefix0.RPackReflector(),
            const <int>[2, 3, 23],
            const <int>[14, 15, 16, 17, 18, 19, 20, 21, 22],
            const <int>[],
            -1,
            {},
            {},
            {
              r"": (b) =>
                  (left, right) => b ? new prefix1.Tree(left, right) : null
            },
            0,
            1,
            const <int>[],
            const <Object>[prefix0.rpack],
            null),
        new r.NonGenericClassMirrorImpl(
            r"Colors",
            r"rpack.test.serialize.Colors",
            524295,
            2,
            const prefix0.RPackReflector(),
            const <int>[4, 5, 6, 24],
            const <int>[14, 24, 16, 17, 18, 25],
            const <int>[26, 27, 28, 29],
            -1,
            {
              r"values": () => prefix1.Colors.values,
              r"RED": () => prefix1.Colors.RED,
              r"GREEN": () => prefix1.Colors.GREEN,
              r"BLUE": () => prefix1.Colors.BLUE
            },
            {},
            {},
            0,
            2,
            const <int>[],
            const <Object>[prefix0.rpack],
            null)
      ],
      <m.DeclarationMirror>[
        new r.VariableMirrorImpl(
            r"what",
            32773,
            0,
            const prefix0.RPackReflector(),
            -1,
            3,
            3, const <int>[], const <Object>[]),
        new r.VariableMirrorImpl(
            r"howMuch",
            32773,
            0,
            const prefix0.RPackReflector(),
            -1,
            4,
            4, const <int>[], const <Object>[]),
        new r.VariableMirrorImpl(
            r"left",
            16389,
            1,
            const prefix0.RPackReflector(),
            null,
            null,
            null, const <int>[], const <Object>[]),
        new r.VariableMirrorImpl(
            r"right",
            16389,
            1,
            const prefix0.RPackReflector(),
            null,
            null,
            null, const <int>[], const <Object>[]),
        new r.VariableMirrorImpl(r"RED", 33941, 2,
            const prefix0.RPackReflector(), 2, 2, 2, const <int>[], const []),
        new r.VariableMirrorImpl(r"GREEN", 33941, 2,
            const prefix0.RPackReflector(), 2, 2, 2, const <int>[], const []),
        new r.VariableMirrorImpl(r"BLUE", 33941, 2,
            const prefix0.RPackReflector(), 2, 2, 2, const <int>[], const []),
        new r.VariableMirrorImpl(r"index", 33861, 2,
            const prefix0.RPackReflector(), -1, 5, 5, const <int>[], const []),
        new r.VariableMirrorImpl(r"values", 2131157, 2,
            const prefix0.RPackReflector(), -1, 6, 7, const <int>[2], const []),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.RPackReflector(), 0, 3, 3, 9),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.RPackReflector(), 0, 3, 3, 10),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.RPackReflector(), 1, 4, 4, 11),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.RPackReflector(), 1, 4, 4, 12),
        new r.MethodMirrorImpl(
            r"",
            0,
            0,
            -1,
            0,
            0,
            const <int>[],
            const <int>[0, 1],
            const prefix0.RPackReflector(),
            const <Object>[]),
        new r.MethodMirrorImpl(r"==", 131074, null, -1, 8, 8, const <int>[],
            const <int>[4], const prefix0.RPackReflector(), const <Object>[]),
        new r.MethodMirrorImpl(
            r"toString",
            131074,
            null,
            -1,
            3,
            3,
            const <int>[],
            const <int>[],
            const prefix0.RPackReflector(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"noSuchMethod",
            65538,
            null,
            null,
            null,
            null,
            const <int>[],
            const <int>[5],
            const prefix0.RPackReflector(),
            const <Object>[const pragma("vm:entry-point")]),
        new r.MethodMirrorImpl(
            r"hashCode",
            131075,
            null,
            -1,
            5,
            5,
            const <int>[],
            const <int>[],
            const prefix0.RPackReflector(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"runtimeType",
            131075,
            null,
            -1,
            9,
            9,
            const <int>[],
            const <int>[],
            const prefix0.RPackReflector(),
            const <Object>[]),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.RPackReflector(), 2, null, null, 19),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.RPackReflector(), 2, null, null, 20),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.RPackReflector(), 3, null, null, 21),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.RPackReflector(), 3, null, null, 22),
        new r.MethodMirrorImpl(
            r"",
            0,
            1,
            -1,
            1,
            1,
            const <int>[],
            const <int>[6, 7],
            const prefix0.RPackReflector(),
            const <Object>[]),
        new r.MethodMirrorImpl(r"toString", 131074, 2, -1, 3, 3, const <int>[],
            const <int>[], const prefix0.RPackReflector(), const []),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.RPackReflector(), 7, 5, 5, 25),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.RPackReflector(), 8, 6, 7, 26),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.RPackReflector(), 4, 2, 2, 27),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.RPackReflector(), 5, 2, 2, 28),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.RPackReflector(), 6, 2, 2, 29)
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(
            r"what",
            32774,
            13,
            const prefix0.RPackReflector(),
            -1,
            3,
            3,
            const <int>[],
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"howMuch",
            32774,
            13,
            const prefix0.RPackReflector(),
            -1,
            4,
            4,
            const <int>[],
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"_what",
            32870,
            10,
            const prefix0.RPackReflector(),
            -1,
            3,
            3,
            const <int>[],
            const [],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"_howMuch",
            32870,
            12,
            const prefix0.RPackReflector(),
            -1,
            4,
            4,
            const <int>[],
            const [],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"other",
            16390,
            14,
            const prefix0.RPackReflector(),
            null,
            null,
            null,
            const <int>[],
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"invocation",
            32774,
            16,
            const prefix0.RPackReflector(),
            -1,
            10,
            10,
            const <int>[],
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"left",
            16390,
            23,
            const prefix0.RPackReflector(),
            null,
            null,
            null,
            const <int>[],
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"right",
            16390,
            23,
            const prefix0.RPackReflector(),
            null,
            null,
            null,
            const <int>[],
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"_left",
            16486,
            20,
            const prefix0.RPackReflector(),
            null,
            null,
            null,
            const <int>[],
            const [],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"_right",
            16486,
            22,
            const prefix0.RPackReflector(),
            null,
            null,
            null,
            const <int>[],
            const [],
            null,
            null)
      ],
      <Type>[
        prefix1.Alotta,
        prefix1.Tree,
        prefix1.Colors,
        String,
        num,
        int,
        const m.TypeValue<List<prefix1.Colors>>().type,
        List,
        bool,
        Type,
        Invocation
      ],
      3,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"what": (dynamic instance) => instance.what,
        r"howMuch": (dynamic instance) => instance.howMuch,
        r"left": (dynamic instance) => instance.left,
        r"right": (dynamic instance) => instance.right,
        r"index": (dynamic instance) => instance.index
      },
      {
        r"what=": (dynamic instance, value) => instance.what = value,
        r"howMuch=": (dynamic instance, value) => instance.howMuch = value,
        r"left=": (dynamic instance, value) => instance.left = value,
        r"right=": (dynamic instance, value) => instance.right = value
      },
      <m.LibraryMirror>[
        new r.LibraryMirrorImpl(
            r"rpack.test.serialize",
            Uri.parse(r"reflectable://0/rpack.test.serialize"),
            const prefix0.RPackReflector(),
            const <int>[],
            {},
            {},
            const <Object>[],
            null)
      ],
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
